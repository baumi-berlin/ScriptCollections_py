#########################################################################
#### Use maximum difference table to create a matrix of boxplots
#########################################################################

###### Set the working directory
setwd("F:/DataF/chamilton/NWR_Land_Use_new/Analyses")

#### Get the libraries for ggplot, grids, images, and graphics
library(ggplot2)
library(grDevices)
library(gridExtra)
library(ReadImages)
library(RGraphics)

### Open the file for the boxplots from "F:\chamilton\NWR_Land_Use_new\Analyses\Difference_across_scales"  
plotdata = read.table(file.choose(), header = T)

## Convert the data to a dataframe
plot.df = data.frame(plotdata)


#########################################################################
#### Begin the boxplotting

############################################ Subset the data for plotting
plot.sub1 = subset(plot.df, Region==1)

### Re-order the columns for the boxplots

plot.sub1$FR_Scenarios = factor(plot.sub1$FR_Scenarios, levels(plot.sub1$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub1$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub1$CP_Scenarios = factor(plot.sub1$CP_Scenarios, levels(plot.sub1$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub1$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub1$U_Scenarios = factor(plot.sub1$U_Scenarios, levels(plot.sub1$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub1$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 1
##
plot1 = ggplot(plot.sub1, aes(factor(plot.sub1$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot2 = ggplot(plot.sub1, aes(factor(plot.sub1$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot3 = ggplot(plot.sub1, aes(factor(plot.sub1$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub2 = subset(plot.df, Region==2)

### Re-order the columns for the boxplots

plot.sub2$FR_Scenarios = factor(plot.sub2$FR_Scenarios, levels(plot.sub2$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub2$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub2$CP_Scenarios = factor(plot.sub2$CP_Scenarios, levels(plot.sub2$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub2$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub2$U_Scenarios = factor(plot.sub2$U_Scenarios, levels(plot.sub2$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub2$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 2
##
plot4 = ggplot(plot.sub2, aes(factor(plot.sub2$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot5 = ggplot(plot.sub2, aes(factor(plot.sub2$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot6 = ggplot(plot.sub2, aes(factor(plot.sub2$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub3 = subset(plot.df, Region==3)

### Re-order the columns for the boxplots

plot.sub3$FR_Scenarios = factor(plot.sub3$FR_Scenarios, levels(plot.sub3$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub3$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub3$CP_Scenarios = factor(plot.sub3$CP_Scenarios, levels(plot.sub3$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub3$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub3$U_Scenarios = factor(plot.sub3$U_Scenarios, levels(plot.sub3$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub3$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 3
##
plot7 = ggplot(plot.sub3, aes(factor(plot.sub3$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot8 = ggplot(plot.sub3, aes(factor(plot.sub3$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot9 = ggplot(plot.sub3, aes(factor(plot.sub3$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub4 = subset(plot.df, Region==4)

### Re-order the columns for the boxplots

plot.sub4$FR_Scenarios = factor(plot.sub4$FR_Scenarios, levels(plot.sub4$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub4$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub4$CP_Scenarios = factor(plot.sub4$CP_Scenarios, levels(plot.sub4$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub4$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub4$U_Scenarios = factor(plot.sub4$U_Scenarios, levels(plot.sub4$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub4$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 4
##
plot10 = ggplot(plot.sub4, aes(factor(plot.sub4$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot11 = ggplot(plot.sub4, aes(factor(plot.sub4$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot12 = ggplot(plot.sub4, aes(factor(plot.sub4$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub5 = subset(plot.df, Region==5)

### Re-order the columns for the boxplots

plot.sub5$FR_Scenarios = factor(plot.sub5$FR_Scenarios, levels(plot.sub5$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub5$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub5$CP_Scenarios = factor(plot.sub5$CP_Scenarios, levels(plot.sub5$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub5$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub5$U_Scenarios = factor(plot.sub5$U_Scenarios, levels(plot.sub5$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub5$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 5
##
plot13 = ggplot(plot.sub5, aes(factor(plot.sub5$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot14 = ggplot(plot.sub5, aes(factor(plot.sub5$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot15 = ggplot(plot.sub5, aes(factor(plot.sub5$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub6 = subset(plot.df, Region==6)

### Re-order the columns for the boxplots

plot.sub6$FR_Scenarios = factor(plot.sub6$FR_Scenarios, levels(plot.sub6$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub6$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub6$CP_Scenarios = factor(plot.sub6$CP_Scenarios, levels(plot.sub6$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub6$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub6$U_Scenarios = factor(plot.sub6$U_Scenarios, levels(plot.sub6$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub6$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 6
##
plot16 = ggplot(plot.sub6, aes(factor(plot.sub6$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot17 = ggplot(plot.sub6, aes(factor(plot.sub6$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot18 = ggplot(plot.sub6, aes(factor(plot.sub6$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


############################################ Subset the data for plotting
plot.sub8 = subset(plot.df, Region==8)

### Re-order the columns for the boxplots

plot.sub8$FR_Scenarios = factor(plot.sub8$FR_Scenarios, levels(plot.sub8$FR_Scenarios)[c(2,1,3,4)])
levels(plot.sub8$FR_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub8$CP_Scenarios = factor(plot.sub8$CP_Scenarios, levels(plot.sub8$CP_Scenarios)[c(2,1,3,4)])
levels(plot.sub8$CP_Scenarios) = c("2001", "BAU", "PNH", "RUG")
plot.sub8$U_Scenarios = factor(plot.sub8$U_Scenarios, levels(plot.sub8$U_Scenarios)[c(4,1,2,3)])
levels(plot.sub8$U_Scenarios) = c("2001", "BAU", "PNH", "RUG")

#################### Row 5
##
plot19 = ggplot(plot.sub8, aes(factor(plot.sub8$FR_Scenarios), FR_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") + 
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot20 = ggplot(plot.sub8, aes(factor(plot.sub8$CP_Scenarios), CP_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))

##
plot21 = ggplot(plot.sub8, aes(factor(plot.sub8$U_Scenarios), U_Difference)) + geom_boxplot() +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
labs(x = " ", y = "Difference (%)") +
opts(axis.text.x = theme_text(size = 10, colour = "black"), axis.text.y = theme_text(size = 10, colour = "black"))


###############################################################################################
#####  Open the map files
map1 = read.jpeg(file.choose())
map2 = read.jpeg(file.choose())
map3 = read.jpeg(file.choose())
map4 = read.jpeg(file.choose())
map5 = read.jpeg(file.choose())
map6 = read.jpeg(file.choose())
map8 = read.jpeg(file.choose())



########################################################################################
######  Create textGrobs to populate the border of the boxplot matrix
########################################################################################
######  Create textGrobs to populate the border of the boxplot matrix
textRegion = textGrob("Region", gp = gpar(fontface = "bold", fontsize = 14))
textRegion1= textGrob("1", gp = gpar(fontface = "bold", fontsize = 14))
textRegion2= textGrob("2", gp = gpar(fontface = "bold", fontsize = 14))
textRegion3= textGrob("3", gp = gpar(fontface = "bold", fontsize = 14))
textRegion4= textGrob("4", gp = gpar(fontface = "bold", fontsize = 14))
textRegion5= textGrob("5", gp = gpar(fontface = "bold", fontsize = 14))
textRegion6= textGrob("6", gp = gpar(fontface = "bold", fontsize = 14))
textRegion8= textGrob("8", gp = gpar(fontface = "bold", fontsize = 14))

##### TextGrobs for Portrait presentation of graphic
textFRportrait = textGrob ("Forest and Range", gp = gpar(fontface = "bold", fontsize = 14))
textCPportrait = textGrob("Crop and Pasture", gp = gpar(fontface = "bold", fontsize = 14))
textUportrait = textGrob ("Urban", gp = gpar(fontface = "bold", fontsize = 14))
emptyText = textGrob(" ")

##### TextGrobs for Landscape presentation of graphic
textRegionlandscape = textGrob("Region", rot = 90, gp = gpar(fontface = "bold", fontsize = 14))
textFRlandscape = textGrob ("Forest and Range", rot = 90, gp = gpar(fontface = "bold", fontsize = 14))
textCPlandscape = textGrob("Crop and Pasture", rot = 90, gp = gpar(fontface = "bold", fontsize = 14))
textUlandscape = textGrob ("Urban", rot = 90, gp = gpar(fontface = "bold", fontsize = 14))
emptyText = textGrob(" ")



########################################################################################
##### Name out output graphic, arrange the grid for the plot outputs, arrange a Grob, and close the png device
png("Scale_difference_boxplots_portrait.png", width=10, height=17.5, units = "in", res=300)

grid.arrange(arrangeGrob(textRegion,textFRportrait,textCPportrait,textUportrait, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map1), plot1, plot2, plot3, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map2), plot4, plot5, plot6, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map3), plot7, plot8, plot9, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map4), plot10, plot11, plot12, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map5), plot13, plot14, plot15, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map6), plot16, plot17, plot18, nrow = 1, widths =c(2.5, 2.5, 2.5, 2.5)),
arrangeGrob(rasterGrob(map8), plot19, plot20, plot21, nrow = 1, widths = c(2.5, 2.5, 2.5, 2.5)), 
nrow = 8, heights = c(0.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5))

# close the graphic device
dev.off()


########################################################################################
##### Name out output graphic, arrange the grid for the plot outputs, arrange a Grob, and close the png device
png("Scale_difference_boxplots_landscape.png", width=17.5, height=10, units = "in", res=300)

grid.arrange(arrangeGrob(textRegionlandscape, rasterGrob(map1),rasterGrob(map2),rasterGrob(map3),rasterGrob(map4),rasterGrob(map5),rasterGrob(map6),rasterGrob(map8), nrow = 1, widths = c(0.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5)),
arrangeGrob(textFRlandscape, plot1, plot4, plot7, plot10, plot13, plot16, plot19, nrow = 1, widths = c(0.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5)),
arrangeGrob(textCPlandscape, plot2, plot5, plot8, plot11, plot14, plot17, plot20, nrow = 1, widths = c(0.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5)),
arrangeGrob(textUlandscape, plot3, plot6, plot9, plot12, plot15, plot18, plot21, nrow = 1, widths = c(0.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5)),
nrow = 4, heights = c(2.5, 2.5, 2.5, 2.5))

# close the graphic device
dev.off()


